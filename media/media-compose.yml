version: "3.8" 

services:

  nzbget:
    image: linuxserver/nzbget:latest
    container_name: nzbget
    environment:
      - PUID=1027
      - PGID=100
      - TZ=America/New_York
    volumes:
      - /volume1/data/usenet:/data/usenet
      - /volume1/docker/config/nzbget:/config
    ports:
      - 6789:6789
    networks: 
      br:
        ipv4_address: 172.20.0.15
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "http://${NZBGET_USER}:${NZBGET_PASS}@127.0.0.1:6789/jsonrpc/status"]
      interval: 30s
      timeout: 30s
      retries: 5
  nzbget-exporter:
    image: frebib/nzbget-exporter
    container_name: nzbget-exporter
    tty: true
    environment: 
      - NZBGET_HOST=http://172.20.0.15:6789
      - NZBGET_USERNAME=${NZBGET_USER}
      - NZBGET_PASSWORD=${NZBGET_PASS}
    ports:
      - 9452:9452
    networks: 
      br:
        ipv4_address: 172.20.1.15
    restart: unless-stopped
    depends_on:
      - nzbget



  radarr:
    image: linuxserver/radarr:latest
    container_name: radarr
    environment:
      - PUID=1027
      - PGID=100
      - TZ=America/New_York
    volumes:
      - /volume1/data:/data
      - /volume1/docker/config/radarr:/config
    ports:
      - 7878:7878
    networks: 
      br:
        ipv4_address: 172.20.0.16
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "http://127.0.0.1:7878/api/v3/health?apiKey=${RADARR_API_KEY}"]
      interval: 30s
      timeout: 30s
      retries: 5
  radarr-exporter:
    image: ghcr.io/onedr0p/exportarr
    container_name: radarr-exporter
    command: ["radarr"]
    environment:
      - TZ=America/New_York
      - PORT=9708
      - URL=http://172.20.0.16:7878
      - APIKEY=${RADARR_API_KEY}
    ports: 
      - 9708:9708
    networks: 
      br:
        ipv4_address: 172.20.1.16
    restart: unless-stopped
    depends_on:
      - radarr



  sonarr:
    image: linuxserver/sonarr:latest
    container_name: sonarr
    environment:
      - PUID=1027
      - PGID=100
      - TZ=America/New_York
    volumes:
      - /volume1/data:/data
      - /volume1/docker/config/sonarr:/config
    ports:
      - 8989:8989
    networks: 
      br:
        ipv4_address: 172.20.0.17
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "http://127.0.0.1:8989/api/v3/health?apiKey=${SONARR_API_KEY}"]
      interval: 30s
      timeout: 30s
      retries: 5
  sonarr-exporter:
    image: ghcr.io/onedr0p/exportarr
    container_name: sonarr-exporter
    command: ["sonarr"]
    environment:
      - TZ=America/New_York
      - PORT=9709
      - URL=http://172.20.0.17:8989
      - APIKEY=${SONARR_API_KEY}
    ports: 
      - 9709:9709
    networks: 
      br:
        ipv4_address: 172.20.1.17
    restart: unless-stopped
    depends_on:
      - sonarr



  prowlarr:
    image: linuxserver/prowlarr:latest
    container_name: prowlarr
    environment:
      - PUID=1027
      - PGID=100
      - TZ=America/New_York
    volumes:
      - /volume1/data:/data
      - /volume1/docker/config/prowlarr:/config
    ports:
      - 9696:9696
    networks:
      br:
        ipv4_address: 172.20.0.18
    restart: unless-stopped
    # healthcheck:
    #   test: []
    #   interval: 30s
    #   timeout: 30s
    #   retries: 5

  

networks:
  br:
    external: 
      name: homelab_bridge_network